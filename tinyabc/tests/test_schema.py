import unittest
from tinyabc.archive import Archive
from tinyabc.schema import AbcGeom_PolyMesh_v1
from .utils import get_fixture, struct_property_encoder
from tinyabc.encoders import numpy_property

try:
    import numpy

    has_numpy = True
except ImportError:
    has_numpy = False


class TestSchema(unittest.TestCase):

    def test_blender_cone_get_schema(self):
        archive = Archive.from_filename(get_fixture("test_blender_cone.abc"))
        self.assertEqual(archive["/Cone/Mesh"].get_schema(), "AbcGeom_PolyMesh_v1")

    def test_blender_cone_to_schema(self):
        archive = Archive.from_filename(get_fixture("test_blender_cone.abc"))
        self.assertIsInstance(archive["/Cone/Mesh"].to_schema(), AbcGeom_PolyMesh_v1)

    @unittest.skipIf(not has_numpy, "numpy not available")
    def test_blender_cone_AbcGeom_PolyMesh_v1(self):
        archive = Archive.from_filename(get_fixture("test_blender_cone.abc"))
        polymesh = archive["/Cone/Mesh"].to_schema()
        face_indices = polymesh.get_face_indices(encoder=numpy_property)
        positions = polymesh.get_P(encoder=numpy_property)
        self.assertEqual(len(face_indices), 128)
        self.assertEqual(len(positions), 33)

    def test_blender_vertex_anim(self):
        archive = Archive.from_filename(get_fixture("test_blender_vertexanim.abc"))
        samples = (
            archive.root.children[0]
            .children[0]
            .properties[".geom"]
            .totree(encoder=struct_property_encoder)["P"]
        )
        self.assertAlmostEqual(
            samples,
            [
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.0, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.0244839191436768, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.090940237045288, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.1888757944107056, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.3077975511550903, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.437212347984314, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.5666271448135376, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.6855487823486328, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.783484697341919, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.8499407768249512, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (1.0, 1.8744248151779175, -1.0),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.9958308935165405, 1.8729236125946045, -0.9887105822563171),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.9839650988578796, 1.868651032447815, -0.9565790295600891),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.9653646349906921, 1.8619533777236938, -0.9062106609344482),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.9409915804862976, 1.8531771898269653, -0.8402108550071716),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.9118080735206604, 1.842668890953064, -0.7611846923828125),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.8787761926651001, 1.8307749032974243, -0.6717374920845032),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.842858076095581, 1.8178415298461914, -0.574474573135376),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.8050157427787781, 1.8042153120040894, -0.4720010757446289),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.7662112712860107, 1.7902426719665527, -0.3669223189353943),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.7274067997932434, 1.7762701511383057, -0.2618434429168701),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.6895644664764404, 1.7626439332962036, -0.15937018394470215),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.6536463499069214, 1.7497106790542603, -0.0621071457862854),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.6206145286560059, 1.737816572189331, 0.027339935302734375),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.5914310216903687, 1.7273082733154297, 0.10636603832244873),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.5670579075813293, 1.7185320854187012, 0.17236602306365967),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.5484573841094971, 1.71183443069458, 0.2227342128753662),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.5365915894508362, 1.707561731338501, 0.2548658847808838),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.5324225425720215, 1.7060606479644775, 0.2661553621292114),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.5324225425720215, 1.7060606479644775, 0.2661553621292114),
                ],
                [
                    (-1.0, -1.0, 1.0),
                    (-1.0, 1.0, 1.0),
                    (-1.0, -1.0, -1.0),
                    (-1.0, 1.0, -1.0),
                    (1.0, -1.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, -1.0, -1.0),
                    (0.5324225425720215, 1.7060606479644775, 0.2661553621292114),
                ],
            ],
        )
